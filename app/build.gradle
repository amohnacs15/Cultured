buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultConfig {
        applicationId 'com.androidtitan.hotspots'
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 2
        versionName "1.1"

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java'] }
        androidTest {
            java.srcDirs = ['src/test/java/']
        }
    }
    productFlavors {
    }

    configurations.all {
        resolutionStrategy.force 'com.android.support:support-annotations:23.4.0'
    }


}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files('src/main/res/libs/swipeactionadapter-1.4.3.jar')
    debugCompile 'com.squareup.haha:haha:2.0.3'

    //testing
    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.1.+"
    testCompile 'com.android.support:support-annotations:23.4.0'
    testCompile "org.mockito:mockito-core:2.+"

    androidTestCompile 'junit:junit:4.12'
    androidTestCompile "org.robolectric:robolectric:3.1.+"
    androidTestCompile 'com.android.support:support-annotations:23.4.0'
    androidTestCompile "org.mockito:mockito-core:2.+"

    compile 'com.squareup.retrofit2:retrofit-mock:2.0.0'

    //support libraries
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:design:23.2.1'
    compile 'com.android.support:recyclerview-v7:23.2.1'
    compile 'com.android.support:cardview-v7:23.2.1'
    compile 'com.google.android.gms:play-services:8.4.0'
    compile 'com.android.support:support-v4:23.2.1'

    // dependency injection
    apt 'com.google.dagger:dagger-compiler:2.0'
    provided 'com.google.dagger:dagger-compiler:2.0'
    provided 'org.glassfish:javax.annotation:10.0-b28'
    compile 'javax.annotation:jsr250-api:1.0'
    compile 'com.google.dagger:dagger:2.0'

    //retrofit
    compile 'com.google.code.gson:gson:2.6.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    compile 'com.squareup.okhttp3:okhttp:3.1.2'

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.android.support:palette-v7:23.2.1'
    compile 'com.flaviofaria:kenburnsview:1.0.7'

    //fabric crashylitics
    compile 'com.etsy.android.grid:library:1.0.5'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }


}

/*
If we wanted to be selective with our Google Play Services in order to limit the size of our application,
we would use these compilers:

Google Location, Activity Recognition, and Places	com.google.android.gms:play-services-location:7.5.0
Google Maps	                                        com.google.android.gms:play-services-maps:7.5.0

We will experiment with this later when we are sure what we need for this app
 */
